#Job
#指定运行环境，本地测试使用ThreadJobFactory或ProcessJobFactory
#job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.factory.class=org.apache.samza.job.local.ThreadJobFactory
job.name=CountLatancy

#YARN
#本地运行时可以省略
yarn.package.path=file://${basedir}/target/${project.artifactId}-${pom.version}-dist.tar.gz
#yarn.package.path=file://{tmp}/filename.tar.gz
#Task
#主类名，包名.主类名
task.class=cn.myc.samzademo.CountLatancy
#使用kafka作为输入流时,字段含义为kafka.topic
task.inputs=kafka.clickevent
#windowable job 必须配置，单位为ms
task.window.ms=60000

#Serializers
#定义序列化与反序列化类
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory

# Kafka System
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
#输入流的键值序列化时使用哪一个序列化类。
systems.kafka.samza.key.serde=string
systems.kafka.samza.msg.serde=string
systems.kafka.consumer.zookeeper.connect=localhost:2181
systems.kafka.producer.bootstrap.servers=localhost:9092


# Job Coordinator
job.coordinator.system=kafka
# Normally, this would be 3, but we have only one broker.
job.coordinator.replication.factor=1